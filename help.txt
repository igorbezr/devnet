Help on module show_ip_route:

NAME
    show_ip_route - Python 2.7 script shows particular subnets of the Cisco network device

FILE
    /home/cisco/repo/show_ip_route.py

DESCRIPTION
    Hello everyone ! Thanks for your attention.
    
    This simple program has created to automate routine network checking of
    device subnets and IP routing table. The routing table is checking to
    find OSPF, BGP, Static and connected routes. Then output has been
    processed to find specific subnets.

CLASSES
    GeneralNetworkDevice
    
    class GeneralNetworkDevice
     |  Class for typical network device
     |  
     |  Attributes:
     |  self.ip - ip address of the network device
     |  self.username - username for device's login
     |  self.password - password for this device
     |  self.session - pexpect ssh session to the device
     |  self.error - flag, indicates that an error has occurred
     |  
     |  Methods:
     |  __init__ - initiation method
     |  initial_connect - method that is handled initial connection
     |  send_command - method that is used to send command to the device
     |  search_device_hostname - Searching the device's hostname
     |                          in running-config
     |  parsing_ip_route - parsing the output from 'show ip route'
     |                          to find subnets
     |  
     |  Methods defined here:
     |  
     |  __init__(self, ip, username, password)
     |  
     |  initial_connect(self)
     |  
     |  parsing_ip_route(self)
     |  
     |  search_device_hostname(self)
     |  
     |  send_command(self, command)

FUNCTIONS
    keyboard_input()
        The keyboard prompt for user to input device credentials
        
        Input parameters:
            none
        Returns:
            credentials - dictionary contains device's credentials
    
    reading_ip_from_file(devices)
        Reading IP addresses of devices from .txt file
        
        Input parameters:
            devices - string, filename for a list of IP addresses
        Returns:
            ip - list that contains IP addresses reading from the file

DATA
    print_function = _Feature((2, 6, 0, 'alpha', 2), (3, 0, 0, 'alpha', 0)...


